# darwin_tasks.yml

---
- name: Check for VSCode
  ansible.builtin.shell: "ls /Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code"
  ignore_errors: yes
  changed_when: false
  register: vscode_installed

- name: Installing VSCode for OSX Intel
  when: vscode_installed is failed and arch.stdout == 'x86_64'
  ansible.builtin.unarchive:
    src: "https://vscode.download.prss.microsoft.com/dbazure/download/stable/0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2/VSCode-darwin.zip" 
    dest: "/Applications"
    remote_src: true
    mode: "0755"
    owner: "{{ remote_regular_user }}"

- name: Installing VSCode for OSX Apple Silicon
  when: vscode_installed is failed and arch.stdout == 'arm64'
  ansible.builtin.unarchive:
    src: "https://vscode.download.prss.microsoft.com/dbazure/download/stable/0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2/VSCode-darwin-arm64.zip"
    dest: "/Applications"
    remote_src: true
    mode: "0755"
    owner: "{{ remote_regular_user }}"

- name: Check for Warp
  ansible.builtin.shell: "ls /Applications/Warp.app"
  ignore_errors: yes
  changed_when: false
  register: warp_installed

- name: Installing warp
  when: warp_installed is failed
  community.general.homebrew:
    name:
      - warp
    state: present

- name: Installing warp themes
  when: warp_installed is failed
  ansible.builtin.git:
    repo: "https://github.com/warpdotdev/themes.git"
    dest: "~/.warp"
    single_branch: yes
    version: main
